<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kubernetes on Personal blog</title>
    <link>https://blog.niflheim.cc/tags/kubernetes/</link>
    <description>Recent content in kubernetes on Personal blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 21 May 2020 00:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://blog.niflheim.cc/tags/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Install kata-containers on K3S on aarch64</title>
      <link>https://blog.niflheim.cc/posts/kata_containers_raspberry/</link>
      <pubDate>Thu, 21 May 2020 00:00:00 +0200</pubDate>
      
      <guid>https://blog.niflheim.cc/posts/kata_containers_raspberry/</guid>
      <description>&lt;p&gt;CLOSED: &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;[2020-05-21 Thu 21:57]&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;
To install &lt;code&gt;kata-containers&lt;/code&gt; on a &lt;code&gt;raspberry-pi&lt;/code&gt; and integrating it into
&lt;code&gt;kubernetes&lt;/code&gt; a few steps are currently required:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install &lt;code&gt;kata-containers&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Setup integration into &lt;code&gt;containerd&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Setup integration into &lt;code&gt;kubernetes&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;install-kata-containers&#34;&gt;Install &lt;code&gt;kata-containers&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Currently the easiest (and apparently only) officially supported way to
install &lt;code&gt;kata-containers&lt;/code&gt; on an &lt;code&gt;aarch64&lt;/code&gt; system is to use &lt;code&gt;snaps&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If you are using the &lt;code&gt;Ubuntu&lt;/code&gt; &lt;code&gt;arm&lt;/code&gt; version this is already included in the
installation and you can install &lt;code&gt;kata-containers&lt;/code&gt; with a single command&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;sudo snap install kata-containers --classic
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;integration-into-containerd&#34;&gt;Integration into containerd&lt;/h2&gt;
&lt;p&gt;When running &lt;code&gt;k3s&lt;/code&gt; there is no &lt;code&gt;containerd&lt;/code&gt; binary as it is embedded into
&lt;code&gt;k3s&lt;/code&gt;, so configuration must be performed in the &lt;code&gt;k3s&lt;/code&gt; configuration&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;.&lt;/p&gt;
&lt;p&gt;The whole process includes the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;code&gt;runtime&lt;/code&gt; must be configured for &lt;code&gt;kata-containers&lt;/code&gt; in &lt;code&gt;containerd&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;code&gt;shims&lt;/code&gt; must be created for &lt;code&gt;containerd&lt;/code&gt; to use &lt;code&gt;kata-containers&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;The node must be configured to be able to run &lt;code&gt;kata-container&lt;/code&gt; workloads.&lt;/li&gt;
&lt;li&gt;The kubernetes cluster must be aware that &lt;code&gt;kata&lt;/code&gt; is a valid runtime.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;To configure a &lt;code&gt;runtime&lt;/code&gt;, the configuration file for &lt;code&gt;k3s&lt;/code&gt; is found under:
&lt;code&gt;/var/lib/rancher/k3s/agent/etc/containerd/config.toml&lt;/code&gt;, however it can not
be edited as it will be regenerated every time &lt;code&gt;k3s&lt;/code&gt; is restarted. Instead it
&lt;a href=&#34;https://rancher.com/docs/k3s/latest/en/advanced/&#34;&gt;should be copied&lt;/a&gt; to
&lt;code&gt;/var/lib/rancher/k3s/agent/etc/containerd/config.toml.tmpl&lt;/code&gt; and that file
can be modified.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;cp /var/lib/rancher/k3s/agent/etc/containerd/config.toml{,.tmpl}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The content should be:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-toml&#34; data-lang=&#34;toml&#34;&gt;[plugins.cri.containerd.runtimes.kata]
  runtime_type = &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;io.containerd.kata.v2&amp;#34;&lt;/span&gt;

[kata.options]
  ConfigPath = &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;/etc/kata-containers/configuration.toml&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The configuration files for &lt;code&gt;/etc/kata-containers/*.toml&lt;/code&gt; must be copied from
the snap, because the default configuration will not be able to start on
Raspberry Pis with &amp;lt; 4GB of memory, as &lt;code&gt;qemu&lt;/code&gt; requests too much memory by
default:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;mkdir -p /etc/kata-containers/
cp /snap/kata-containers/current/usr/share/defaults/kata-containers/*.toml /etc/kata-containers/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Inside these configuration files (depending on the Pi) make sure to adjust the
value of &lt;code&gt;default_memory&lt;/code&gt; to something the hardware can handle. You should at
least adjust the default &lt;code&gt;configuration.toml&lt;/code&gt; and &lt;code&gt;configuration-qemu.toml&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;In addition &lt;code&gt;shim&lt;/code&gt; files must be created in &lt;code&gt;/usr/local/bin&lt;/code&gt; to point to the
&lt;code&gt;shim&lt;/code&gt; binaries of &lt;code&gt;kata-containers&lt;/code&gt; for &lt;code&gt;containerd&lt;/code&gt; to pick it up.&lt;/p&gt;
&lt;p&gt;The following script will create all the shims (including some that might not
actually be supported) - it was copied out of the &lt;code&gt;kata-deploy&lt;/code&gt; project.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;&lt;span style=&#34;color:#0f0;font-weight:bold&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#0f0;font-weight:bold&#34;&gt;&lt;/span&gt;shims=(
    &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;fc&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;qemu&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;qemu-virtiofs&amp;#34;&lt;/span&gt;
    &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;clh&amp;#34;&lt;/span&gt;
)

&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;for&lt;/span&gt; shim in &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shims[@]&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;do&lt;/span&gt;
    shim_binary=&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;containerd-shim-kata-&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;-v2&amp;#34;&lt;/span&gt;
    shim_file=&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;/usr/local/bin/&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_binary&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;
    shim_backup=&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;/usr/local/bin/&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_binary&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;.bak&amp;#34;&lt;/span&gt;

    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; [ -f &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_file&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;then&lt;/span&gt;
        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;warning: &lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_binary&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt; already exists&amp;#34;&lt;/span&gt; &amp;gt;&amp;amp;&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;2&lt;/span&gt;
        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;if&lt;/span&gt; [ ! -f &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_backup&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt; ]; &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;then&lt;/span&gt;
            mv &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_file&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_backup&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;else&lt;/span&gt;
            rm &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;${&lt;/span&gt;shim_file&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;
        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;fi&lt;/span&gt;
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;fi&lt;/span&gt;
    cat &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;lt;&amp;lt; EOT | tee &amp;#34;$shim_file&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;KATA_CONF_FILE=/etc/kata-containers/configuration.toml /snap/kata-containers/current/usr/bin/containerd-shim-kata-v2 \$@
&lt;/span&gt;&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;EOT&lt;/span&gt;
    chmod +x &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;$shim_file&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;done&lt;/span&gt;

&lt;span style=&#34;color:#007f7f&#34;&gt;# On the PI a default shim was also needed&lt;/span&gt;
cp /usr/local/bin/containerd-shim-kata-qemu-v2 /usr/local/bin/containerd-shim-kata-v2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now the &lt;code&gt;k3s-agent&lt;/code&gt; must be restarted to reload the &lt;code&gt;containerd&lt;/code&gt;
configuration and we can test that kata-container runtime is working by
running the following commands:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;systemctl restart k3s-agent
ctr image pull docker.io/library/busybox:latest
ctr run --runtime io.containerd.run.kata.v2 -t --rm docker.io/library/busybox:latest hello sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;If the tests succeed the node can now be labeled as supporting &lt;code&gt;kata-containers&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl label node &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt;$NODE_NAME&lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;&lt;/span&gt; --overwrite katacontainers.io/kata-runtime=&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now as a last step a new &lt;a href=&#34;https://kubernetes.io/docs/concepts/containers/runtime-class/&#34;&gt;RuntimeClass&lt;/a&gt; must be created for &lt;code&gt;kata&lt;/code&gt; that can be
used to force pods to be run using it:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: node.k8s.io/v1beta1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: RuntimeClass
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: kata
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;handler&lt;/span&gt;: kata
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Now pods can use this runtime by specifying &lt;code&gt;runtimeClassName&lt;/code&gt; inside the &lt;code&gt;spec&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: Pod
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: nginx-untrusted
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;runtimeClassName&lt;/span&gt;: kata
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;containers&lt;/span&gt;:
  - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: nginx
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;image&lt;/span&gt;: nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;As documented &lt;a href=&#34;https://github.com/kata-containers/packaging/blob/master/snap/README.md#initial-setup&#34;&gt;here&lt;/a&gt;. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;Most information in this section is a direct extract from &lt;a href=&#34;https://github.com/kata-containers/packaging/pull/823&#34;&gt;this PR&lt;/a&gt; adding &lt;code&gt;k3s&lt;/code&gt; support to &lt;code&gt;kata-deploy&lt;/code&gt;. &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
    <item>
      <title>Deploying Teamspeak on a Raspberry PI kubernetes cluster</title>
      <link>https://blog.niflheim.cc/posts/teamspeak-k8s-arm/</link>
      <pubDate>Fri, 08 May 2020 22:59:00 +0200</pubDate>
      
      <guid>https://blog.niflheim.cc/posts/teamspeak-k8s-arm/</guid>
      <description>&lt;p&gt;While this post will end up with a running &lt;a href=&#34;https://www.teamspeak.com/en/&#34;&gt;Teamspeak&lt;/a&gt; server, it is very hard
on the resources of the Raspberry Pi and might not be suitable for everyday
use.&lt;/p&gt;
&lt;p&gt;To deploy a teamspeak server on raspberry pi a few things need to be done:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(optional) Get a Kubernetes cluster up and running (this is not required, if
you just want to run the &lt;code&gt;docker&lt;/code&gt; container directly).&lt;/li&gt;
&lt;li&gt;Get Teamspeak to run on &lt;code&gt;ARM&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Setup an ingress controller to make the Teamspeak server accessible from the
outside world (in this case this will be the &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/&#34;&gt;Nginx Ingress&lt;/a&gt;).&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;setting-up-a-kubernetes-cluster&#34;&gt;Setting up a kubernetes cluster&lt;/h2&gt;
&lt;p&gt;To setup a kubernetes cluster on Raspberry Pis &lt;a href=&#34;https://k3s.io/&#34;&gt;K3S&lt;/a&gt; is very good approach, as
the cluster will be more lightweight that simply installing upstream
kubernetes.&lt;/p&gt;
&lt;p&gt;As a base I recommend using &lt;a href=&#34;https://blog.hypriot.com/&#34;&gt;HypriotOS&lt;/a&gt; or &lt;a href=&#34;https://ubuntu.com/download/server/arm&#34;&gt;Ubuntu Server&lt;/a&gt;&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt; as those allow
configuring the images using &lt;a href=&#34;https://cloudinit.readthedocs.io/en/latest/&#34;&gt;Cloud-Init&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Make sure to follow the instructions to use the the &lt;code&gt;legacy&lt;/code&gt; backend for
&lt;code&gt;iptables&lt;/code&gt; if installing &lt;code&gt;kubernetes&lt;/code&gt; v1.17 or lower: &lt;a href=&#34;https://v1-17.docs.kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#ensure-iptables-tooling-does-not-use-the-nftables-backend&#34;&gt;kubeadm instructions&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;When installing &lt;code&gt;k3s&lt;/code&gt; to run &lt;code&gt;Teamspeak&lt;/code&gt; &lt;code&gt;Traefik&lt;/code&gt; should not be installed,
as only the 2.x version supports &lt;code&gt;UDP&lt;/code&gt; ingresses - so instead &lt;code&gt;nginx-ingress&lt;/code&gt;
will be installed later:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;curl -sfL https://get.k3s.io | sh -s - --no-deploy=traefik
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;deploy-teamspeak&#34;&gt;Deploy Teamspeak&lt;/h2&gt;
&lt;h3 id=&#34;build-an-arm-image-for-teamspeak&#34;&gt;Build an ARM image for Teamspeak&lt;/h3&gt;
&lt;p&gt;Teamspeak does not provide a binary for &lt;code&gt;ARM&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;It is however possible to run it using &lt;a href=&#34;https://www.qemu.org/&#34;&gt;Qemu&lt;/a&gt; - I have already prepared an
&lt;code&gt;ARM&lt;/code&gt; image that will run the Teamspeak server through &lt;code&gt;qemu&lt;/code&gt; that you can
find on my &lt;a href=&#34;https://hub.docker.com/repository/docker/monadt/teamspeak3-server&#34;&gt;Dockerhub&lt;/a&gt; - or if you want to see the source checkout the
repository on &lt;a href=&#34;https://github.com/bergmannf/teamspeak3-server-arm&#34;&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The image is using the same &lt;code&gt;entrypoint.sh&lt;/code&gt; as the &lt;a href=&#34;https://hub.docker.com/%5F/teamspeak&#34;&gt;official image&lt;/a&gt; - so if
you are already using that one you should be able to use it exactly the same
way (if not - feel free to open an issue).&lt;/p&gt;
&lt;h3 id=&#34;deploy-the-image&#34;&gt;Deploy the image&lt;/h3&gt;
&lt;p&gt;Now - if you do not want to use &lt;code&gt;kubernetes&lt;/code&gt;, you can simply use the image
using &lt;code&gt;docker&lt;/code&gt; and expose the required &lt;code&gt;Teamspeak&lt;/code&gt; ports as you would with
&lt;code&gt;docker&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;docker run -p 9987:9987/udp -p 10011:10011 -p 30033:30033 -e TS3SERVER_LICENSE=accept monadt/teamspeak3-server
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;This way is a lot easier on the resources and will likely run more reliable
on a Raspberry PI with &amp;lt; 2 GB of RAM.&lt;/p&gt;
&lt;h2 id=&#34;setup-nginx-ingress&#34;&gt;Setup nginx-ingress&lt;/h2&gt;
&lt;h3 id=&#34;get-nginx-ingress-to-run-on-arm&#34;&gt;Get nginx-ingress to run on ARM&lt;/h3&gt;
&lt;p&gt;Setting up the &lt;code&gt;nginx-ingress&lt;/code&gt; on a cluster running on &lt;code&gt;ARM&lt;/code&gt; needs a few extra
steps when using the &lt;a href=&#34;https://kubernetes.github.io/ingress-nginx/deploy/&#34;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The images used in the &lt;code&gt;manifests&lt;/code&gt; are not compatible with &lt;code&gt;armv7&lt;/code&gt; (that is
used when running a cluster on a bunch of Raspberry Pis).&lt;/p&gt;
&lt;p&gt;First the &lt;code&gt;mandatory.yaml&lt;/code&gt; has to be updated to use the images for the &lt;code&gt;arm&lt;/code&gt;
architecture&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;wget https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/mandatory.yaml
sed -i &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#39;s/nginx-ingress-controller:0/nginx-ingress-controller-arm:0/&amp;#39;&lt;/span&gt; mandatory.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The resulting &lt;code&gt;mandatory.yaml&lt;/code&gt; file can now be applied to the cluster:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl apply -f mandatory.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In my local cluster I am using the &lt;code&gt;NodePort&lt;/code&gt; approach, so the service for
that can be applied next:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/nginx-0.30.0/deploy/static/provider/baremetal/service-nodeport.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;setup-a-teamspeak-deployment&#34;&gt;Setup a Teamspeak deployment&lt;/h2&gt;
&lt;p&gt;With all pieces in place the &lt;code&gt;Teamspeak&lt;/code&gt; container can now be deployed onto
the cluster:&lt;/p&gt;
&lt;p&gt;Save the following &lt;code&gt;yaml&lt;/code&gt; into a file (e.g. &lt;code&gt;teamspeak.yaml&lt;/code&gt;).&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;---
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: Namespace
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak
---
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: PersistentVolumeClaim
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-pvc
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;namespace&lt;/span&gt;: teamspeak
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;accessModes&lt;/span&gt;:
    - ReadWriteOnce
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;storageClassName&lt;/span&gt;: local-path
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;resources&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;requests&lt;/span&gt;:
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;storage&lt;/span&gt;: 256Mi
---
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: apps/v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: Deployment
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-deployment
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;namespace&lt;/span&gt;: teamspeak
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;labels&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;app&lt;/span&gt;: teamspeak
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;replicas&lt;/span&gt;: &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;1&lt;/span&gt;
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;selector&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;matchLabels&lt;/span&gt;:
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;app&lt;/span&gt;: teamspeak
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;template&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;namespace&lt;/span&gt;: teamspeak
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;labels&lt;/span&gt;:
        &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;app&lt;/span&gt;: teamspeak
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;spec&lt;/span&gt;:
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;containers&lt;/span&gt;:
        - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-server
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;image&lt;/span&gt;: monadt/teamspeak3-server:&lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;3.11.0&lt;/span&gt;
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;ports&lt;/span&gt;:
            - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: ts
              &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;containerPort&lt;/span&gt;: &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;9987&lt;/span&gt;
              &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;protocol&lt;/span&gt;: UDP
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;resources&lt;/span&gt;:
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;env&lt;/span&gt;:
          - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: TS3SERVER_LICENSE
            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;value&lt;/span&gt;: accept
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;volumeMounts&lt;/span&gt;:
          - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;mountPath&lt;/span&gt;: /var/ts3server/
            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-data
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;volumes&lt;/span&gt;:
        - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-data
          &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;persistentVolumeClaim&lt;/span&gt;:
            &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;claimName&lt;/span&gt;: teamspeak-pvc
---
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: Service
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak-service
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;namespace&lt;/span&gt;: teamspeak
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;labels&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;app&lt;/span&gt;: teamspeak
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;spec&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;type&lt;/span&gt;: ClusterIP
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;ports&lt;/span&gt;:
    - &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;9987&lt;/span&gt;
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;targetPort&lt;/span&gt;: ts
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;protocol&lt;/span&gt;: UDP
      &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: ts
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;selector&lt;/span&gt;:
    &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;app&lt;/span&gt;: teamspeak
---
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;apiVersion&lt;/span&gt;: v1
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;kind&lt;/span&gt;: ConfigMap
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;metadata&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: udp-services
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;namespace&lt;/span&gt;: ingress-nginx
&lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;data&lt;/span&gt;:
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;9987&lt;/span&gt;: &lt;span style=&#34;color:#0ff;font-weight:bold&#34;&gt;&amp;#34;teamspeak/teamspeak-service:9987&amp;#34;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Apply this using &lt;code&gt;kubectl&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl apply -f teamspeak.yaml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;The 9987 &lt;code&gt;udp&lt;/code&gt; port will also need to be added to the &lt;code&gt;ingress&lt;/code&gt; service.
In the &lt;code&gt;ports&lt;/code&gt; section of the service add the following snippet:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl edit svc ingress-nginx -n ingress-nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;- &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;name&lt;/span&gt;: teamspeak
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;port&lt;/span&gt;: &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;9987&lt;/span&gt;
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;protocol&lt;/span&gt;: UDP
  &lt;span style=&#34;color:#fff;font-weight:bold&#34;&gt;targetPort&lt;/span&gt;: &lt;span style=&#34;color:#ff0;font-weight:bold&#34;&gt;9987&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;forwarding-traffic-to-the-ingress&#34;&gt;Forwarding traffic to the ingress&lt;/h2&gt;
&lt;p&gt;The final step depends a lot on the setup you are deploying the cluster in.&lt;/p&gt;
&lt;p&gt;If it is behind your local router, you have to check which port was bound to
the 9987 &lt;code&gt;udp&lt;/code&gt; port and forward this to one of your cluster-nodes:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-sh&#34; data-lang=&#34;sh&#34;&gt;kubectl describe svc ingress-nginx -n ingress-nginx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#e5e5e5;background-color:#000;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-text&#34; data-lang=&#34;text&#34;&gt;Name:                     ingress-nginx
Namespace:                ingress-nginx
Labels:                   app.kubernetes.io/name=ingress-nginx
                          app.kubernetes.io/part-of=ingress-nginx
Annotations:              Selector:  app.kubernetes.io/name=ingress-nginx,app.kubernetes.io/part-of=ingress-nginx
Type:                     NodePort
IP:                       10.43.33.70
Port:                     http  80/TCP
TargetPort:               80/TCP
NodePort:                 http  32224/TCP
Endpoints:
Port:                     https  443/TCP
TargetPort:               443/TCP
NodePort:                 https  31955/TCP
Endpoints:
Port:                     teamspeak  9987/UDP
TargetPort:               9987/UDP
NodePort:                 teamspeak  31222/UDP
Endpoints:
Session Affinity:         None
External Traffic Policy:  Cluster
Events:                   &amp;lt;none&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;In this case the port that needs to be forwarded is the &lt;code&gt;31222&lt;/code&gt; port (the
&lt;code&gt;NodePort&lt;/code&gt; for the 9987 &lt;code&gt;UDP&lt;/code&gt; port).&lt;/p&gt;
&lt;section class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;For Ubuntu you will have to edit the file &lt;code&gt;/boot/firmware/cmdline.txt&lt;/code&gt; and add the options &lt;code&gt;cgroup_memory=1 cgroup_enable=memory&lt;/code&gt; at the end of the line for &lt;code&gt;k3s&lt;/code&gt; (or &lt;code&gt;containers&lt;/code&gt; in general) to work. &lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34; role=&#34;doc-endnote&#34;&gt;
&lt;p&gt;See &lt;a href=&#34;https://github.com/kubernetes/ingress-nginx/pull/3852&#34;&gt;https://github.com/kubernetes/ingress-nginx/pull/3852&lt;/a&gt; &lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/section&gt;
</description>
    </item>
    
  </channel>
</rss>
